Your handleChange is throwing an error.  You need to have answer: '' in your state, and then in your handleChange you can simply declare a new variable like let newAnswer = event.target.value and then use setState( { answer: newAnswer } ) to update the input box and the user’s answer.
Your handleSubmit will need to check the user’s answer against the data answer and update the score accordingly.  I just created a newScore variable and if the user’s answer === the data answer then I make newScore be the player’s current score plus the data value and if they don’t match then set it to the score minus the value.  then I use setState( {score: newScore } ) 
you will want to remove the score: 0 from your getNewQuestion function, because it keeps setting the user’s score to 0. 
in your handleSubmit, after you use setState() to update the score, you will want to call this.getNewQuestion()  to get a new question and reload the component, otherwise you would have to create a ‘get next question’ type of button so the user can keep playing.